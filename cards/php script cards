<?php

class Validator
{
    public static function validate($cardNumber)
    {
        // удалим ненужное из номера
        $cardNumber = preg_replace('/\D/', '', $cardNumber);

        // Алгоритм Луна
        if (!self::isValidLuhn($cardNumber)) {
            return 'невалидная :(';
        }

        // Виза или Мастеркард?
        $эмитент = self::getЭмитент($cardNumber);

        // возврат валидации и эмитента
        return 'валидная, ' . $эмитент;
    }

    private static function isValidLuhn($cardNumber)
    {
        $sum = 0;
        $alt = false;
        for ($i = strlen($cardNumber) - 1; $i >= 0; $i--) {
            $num = intval($cardNumber[$i]);
            if ($alt) {
                $num *= 2;
                if ($num > 9) {
                    $num = $num % 10 + 1;
                }
            }
            $sum += $num;
            $alt = !$alt;
        }
        return $sum % 10 == 0;
    }

    private static function getЭмитент($cardNumber)
    {
        // виза
        if (preg_match('/^4[0-9]{12}(?:[0-9]{3})?$/', $cardNumber)) {
            return 'Visa';
        }

        // мастеркард
        if (preg_match('/^5[1-5][0-9]{14}$/', $cardNumber)) {
            return 'Mastercard';
        }

        // эмитент не определен
        return 'название эмитента не определено';
    }
}

$cardNumber = $argv[1];
$result = Validator::validate($cardNumber);
echo $result;

// php try2.php 4750657776370372 
